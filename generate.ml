#!/usr/bin/env ocamlscript
Ocaml.packs := ["dockerfile"]
--
open Dockerfile
open Printf

let header (img,tag) =
  comment "Autogenerated by OCaml-Dockerfile script" @@
  from ~tag img @@
  maintainer "Anil Madhavapeddy <anil@recoil.org>"

(** RPM rules *)
module RPM = struct

  let base_packages =
    Linux.RPM.install "sudo passwd git" @@
    Linux.RPM.groupinstall "Development Tools" 

  let repo = function
  | `CentOS7 ->
      let url = "http://download.opensuse.org/repositories/home:ocaml/CentOS_7/home:ocaml.repo" in
      run "curl -o /etc/yum.repos.d/home:ocaml.repo -OL %s" url
  | `CentOS6 ->
      let url = "http://download.opensuse.org/repositories/home:ocaml/CentOS_6/home:ocaml.repo" in
      run "curl -o /etc/yum.repos.d/home:ocaml.repo -OL %s" url

  let system_ocaml = Linux.RPM.install "ocaml ocaml-camlp4-devel ocaml-ocamldoc"
end

(** Debian rules *)
module Apt = struct

  let base_packages =
    Linux.Apt.update @@
    Linux.Apt.install "sudo pkg-config git build-essential m4 software-properties-common aspcud unzip curl libx11-dev"
 
  let system_ocaml =
    Linux.Apt.install "ocaml ocaml-native-compilers camlp4-extra"

  let system_opam =
    Linux.Apt.install "opam aspcud"

  let source_opam =
    run "git clone -b 1.2 git://github.com/ocaml/opam" @@
    Linux.run_sh "cd opam && make cold && make install"

  let repo = function
  | `Ubuntu ->
      let url = "http://download.opensuse.org/repositories/home:/ocaml/xUbuntu_14.04" in
      let repo = sprintf "deb %s/ /" url in
      run "echo %S > /etc/apt/sources.list.d/opam.list" repo @@
      run "curl -OL %s/Release.key" url @@
      run "apt-key add - < Release.key" @@
      Linux.Apt.update
end

module Opam = struct

  let run_as_opam fmt = Linux.run_as_user "opam" fmt
  let opamhome = "/home/opam"

  let opam_init
    ?(repo="git://github.com/ocaml/opam-repository") 
    ?(compiler_version="4.02.1") () =
    env ["OPAMYES","1"] @@
    run_as_opam "git clone %s" repo @@
    run_as_opam "opam init -a -y %s/opam-repository" opamhome @@
    run_as_opam "opam switch -y %s" compiler_version @@
    workdir "%s/opam-repository" opamhome @@
    run_as_opam "opam install -y opam-installext" @@
    onbuild (run_as_opam "cd %s/opam-repository && git pull && opam update -u -y" opamhome)
end

let mkdir dir = 
  match Sys.command (sprintf "mkdir -p %s" dir) with
  | 0 -> () | _ -> raise (Failure ("mkdir -p " ^ dir))

(* Generate OCaml base images with particular revisions of OCaml and OPAM *)
let _ =
  let apt_base (base,tag) = 
    header (base,tag) @@
    Apt.(base_packages @@
         system_ocaml @@
         Linux.Git.init ()) 
  in
  let rpm_base (base,tag) =
    header (base,tag) @@
    RPM.(base_packages @@
         system_ocaml @@
         Linux.Git.init ())
  in
  List.iter (fun (name, docker) ->
    mkdir ("docker-ocaml-build/" ^ name);
    let fout = open_out ("docker-ocaml-build/"^name^"/Dockerfile") in
    output_string fout (string_of_t docker)
  ) [
     "ubuntu-14.04", apt_base ("ubuntu", "trusty");
     "ubuntu-14.10", apt_base ("ubuntu", "utopic");
     "ubuntu-15.04", apt_base ("ubuntu", "vivid");
     "debian-stable", apt_base ("debian", "stable");
     "debian-testing", apt_base ("debian", "testing");
     "centos-7", rpm_base ("centos", "centos7");
     "centos-6", rpm_base ("centos", "centos6");
     "fedora-21", rpm_base ("fedora", "fedora21");
    ]

